<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>如鱼饮水，冷暖自知</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wangjiezhe.com/"/>
  <updated>2018-10-06T18:30:23.279Z</updated>
  <id>https://wangjiezhe.com/</id>
  
  <author>
    <name>西风冷香</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>博客的重构与回顾</title>
    <link href="https://wangjiezhe.com//posts/2018-10-05-refactor-blog/"/>
    <id>https://wangjiezhe.com//posts/2018-10-05-refactor-blog/</id>
    <published>2018-10-05T07:06:59.000Z</published>
    <updated>2018-10-06T18:30:23.279Z</updated>
    
    <content type="html"><![CDATA[<p>利用十一的时间，重新整理了一下个人博客的页面。</p><p>看了一下，上一篇文章还是在 2015 年 8 月，到现在已经有三年多了，我真是。。。唉</p><h2 id="入坑-linux">入坑 Linux</h2><p>记得最早接触 Linux 是在 2012 年，当时是上计概课要写代码，于是心血来潮地在电脑上安装了 Fedora（话说那时 Fedora 的版本号才是 17），然后就掉进了 Linux 的坑里一去不复返。而注册 Github 的时间是在 2013 年 8 月 15 日，具体什么原因已经不记得了。。。</p><p>后来想找一款能够听歌的软件，那时网易云音乐还没有出 Linux 版，FZUG 也还没有成立，我在网上偶然间发现了一款可以听歌、而且还是可以听网易云音乐的软件，那就是 <a href="https://github.com/XuShaohua/kwplayer" target="_blank" rel="noopener">kwplayer</a>。看了下 commit，第一次提交是在 2013 年 8 月 29 号：<a href="https://github.com/XuShaohua/kwplayer/commit/1e0de4c0d889bccd823c5200db3313cb921e066f" target="_blank" rel="noopener">inited</a>。而我应该是在10月份的时候发现的，至于在哪儿找到的已经完全不记得了。</p><p>还记得第一次提交 Issue 是 <a href="https://github.com/XuShaohua/kwplayer/issues/11" target="_blank" rel="noopener">#11</a> 和 <a href="https://github.com/XuShaohua/kwplayer/issues/12" target="_blank" rel="noopener">#12</a>，当时只是发现 Github 上有个可以提交 Bug 的地方，于是就随手开了两个 Issue，没想到当天都得到了详细的回复，并在三四天后都得到了解决：<a href="https://github.com/XuShaohua/kwplayer/commit/9c21c4f908b02f77f345aa04e6ef8c3a2fba9e56" target="_blank" rel="noopener">9c21c4f</a> 和 <a href="https://github.com/XuShaohua/kwplayer/commit/90a02a8508a476889df0f5a24debff7e7084e6fd" target="_blank" rel="noopener">90a02a8</a>。</p><p>这当时让我非常兴奋，因为以前从来没想过会这么快就得到回应，于是后来也积极地参加到其中，积极地提交 Bug，持续了有一年多的时间 <a href="https://github.com/XuShaohua/kwplayer/issues?q=is:issue+author:wangjiezhe" target="_blank" rel="noopener">Issued by wangjiezhe</a>，并开始学习 rpm 打包，发布在了 <a href="https://copr.fedorainfracloud.org/coprs/wangjiezhe/" target="_blank" rel="noopener">copr</a> 上。当然这也是我后来对 Python 感兴趣的契机之一。</p><p>刚又看了一下，我在 copr 上最早的一次 build 是在 <a href="https://copr.fedorainfracloud.org/coprs/wangjiezhe/kwplayer/build/7604/" target="_blank" rel="noopener">2014 年 3 月 31 号</a>，而我能够找到的最早介绍 copr 的中文资料是 <a href="https://linuxtoy.org/archives/fedora-copr.html" target="_blank" rel="noopener">Fedora Copr</a>，现在的 copr 网址上线是在 <a href="https://lists.fedorahosted.org/archives/list/copr-devel@lists.fedorahosted.org/thread/SG7OAH7III5TDCSO7TLXOWIOPG7S7F2X/" target="_blank" rel="noopener">2013 年 12 月</a>， FZUG 的 <a href="https://github.com/1dot75cm" target="_blank" rel="noopener">mosquito</a> 也是从 2014 年 6 月才开始建立他的 <a href="https://fedoraproject.org/wiki/User:Mosquito" target="_blank" rel="noopener">myrepo</a> 的，话说国内比我更早开始使用 <a href="https://copr.fedorainfracloud.org" target="_blank" rel="noopener">copr</a> 的应该不多吧。。。</p><p>话说那时 <a href="https://blog.comebacktome.org/about/" target="_blank" rel="noopener">XuShaohua</a> 的 Github 账户名还是叫 LiuLang，后来他去了 Deepin，网易云音乐的 Linux 版他应该是作者之一。</p><p>当然后来因为各种原因我不再维护我的 copr 仓库，包括犯懒（反正有了 mosquito 的 myrepo 源，以及后来的 FZUG 源）、Fedora 的习惯性跳票让我非常不爽（这是在找借口么。。。）等等，加上后来我从 Fedora 转到了 Arch Linux 上（大概是 2015 年暑假吧），这个仓库就彻底荒废了。</p><h2 id="博客的建立">博客的建立</h2><p>最早的一些记录文章我都发在了 QQ 空间里，显得格格不入的。后来就想找一个合适的可以放这些东西的地方。</p><p>期间考虑过 WordPress，不过觉得比较麻烦，还需要有地方托管；考虑过一些博客托管平台，不过没有找到太喜欢的；觉得 Blogger 不错，但又被 W 掉了。。。</p><p>后来看到阮一峰的的介绍文章：<a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="noopener">搭建一个免费的，无限流量的Blog----github Pages和Jekyll入门</a>，觉得这是个不错的选择，于是就开始折腾 Github Pages。作为一个审美盲与选择困难症患者，在众多的 Jekyll 主题中完全不知道该怎么选择，于是就随手选了一个自己觉得比较简洁明了的，也就是 ellochen 的博客主题，直接 copy 过来就用了。</p><p>嗯，说好听点叫简洁，说不好听呢就叫难看。。。😭</p><p>话说 ellochen 的 Github 账号已经不存在了，貌似是已经注销了，但好在还存留有 <a href="https://github.com/pii0x/ellochen.github.com" target="_blank" rel="noopener">Fork</a>（话说这就是 Fork 相较于 Star 的好处吧，我之前也有一些被删的 repo 是这么存留下来的，嗯，我指的不是 phuslu 大神，指的是垠神。。。），豆瓣小站 <a href="https://site.douban.com/196781/" target="_blank" rel="noopener">Gode-Mode</a> 貌似是他建立的。</p><h2 id="博客的重构">博客的重构</h2><p>在那之后，博客的页面也小幅修改过几次，但大的主题方面都没有变过。曾经有想过重新选一个更好看的主题，但碍于时间原因一直没有去做。期间也在其他的 Page 中也曾经尝试过其他的主题，比如 <a href="https://github.com/hmfaysal/hmfaysal-omega-theme" target="_blank" rel="noopener">HMFAYSAL OMEGA</a>，整体不错，但有些华而不实了；也试过 <a href="https://github.com/kingcons/coleslaw" target="_blank" rel="noopener">coleslaw</a>，但又太过简单了。</p><p>直到第一次看到 NexT 主题，就像<a href="https://icehe.github.io/web/blog_changelog/" target="_blank" rel="noopener">这个</a>，真的把我惊艳到了，流畅的载入动画，自动展开并追随页面更新的目录，再加上简洁没有多余内容的页面，完全符合我对自己的博客的预期啊。于是最终决定就用这个主题了。</p><p>不过 NexT 的主页 <a href="https://theme-next.org" target="_blank" rel="noopener">theme-next.org</a> 目前显示 Under Construction，没有最新的文档只有根据旧文档、网上的教程还有源代码自行摸索，网上很多教程和解决方案都是过时的，只好自己边做边摸索了。</p><p>然后发现，NexT 的配置又有一大堆，这简直就是在为难选择困难症的患者啊。。。</p><h3 id="方案选择">方案选择</h3><p>NexT 主题总共有 4 种方案：Muse，Mist，Pisces 和 Gemini，为选哪一个我纠结了有近 1 个小时，对比各个博客样例，又在本地挨个试了好几遍，去找它们的不同点。最后发现，Muse 和 Mist 可以算一类，目录都在右侧，可以选择动态载入，也可以选择直接显示或隐藏。Muse 的布局相对宽松一点，顶部标题栏也比较大；Mist 相对紧凑一点，所有标题和标签都放在了最顶上的一栏里。而 Pisces 和 Gemini 又可以算一类，目录和标题栏恒在左边，右边是正文，Pisces 的页面和前两个比较相似，纯黑白布局，连贯性很强；而 Gemini 则更传统一些，每篇文章之间分的清清楚楚。</p><p>最终我选择了 Gemini 方案，原因是我觉得目录的动态载入虽然显得比较高级，但文章整体左移的那一下还是显得有些晃眼了，而且目录在右、正文在左的布局让我有些不太习惯；而不用 Pisces 的原因则是文章之间没有明显的分界线，文章中的小标题也不是很显著，于是最后暂定了 Gemini 方案。（嗯，暂定，说不定那天我有回来打自己的脸了）</p><h3 id="插件">插件</h3><p>应该说，折腾这些插件是最费时间的，不但要面临各种选择，还要面临选完了发现用不了然后又得换的状况。。。有些插件本身有问题，需要手动修改才能使用，有些则根本不知道该怎么改。。。</p><h4 id="数学">数学</h4><p>数学公式的渲染最开始是打算用 MathJax，和以前保持一致就可以了。本来没有问题，但后来在利用 Travis-CI 自动部署的时候发现，远程安装的 pandoc 的版本不对，没有办法正确渲染，又找不到解决的办法，于是只能弃之而选择 katex。katex 其实我之前就听说过，据说比 MathJax 要快很多（公式一多的话 MathJax 确实太慢了），不过现在 0.10.0-rc1 的版本。由于前面的几篇文章里面还没有数学公式，我还没有真正试验过。</p><p>另外吐槽一句，npmjs 上的 hexo-renderer-markdown-it 的版本太老了，直接安装 <a href="https://github.com/hexojs/hexo-renderer-markdown-it" target="_blank" rel="noopener">Github</a> 上的版本就可以了，这个插件已经更新了，但仓库里的模块还没有更新。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ cat package-lock.json | jq .dependencies.\<span class="string">"hexo-renderer-markdown-it\"</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  "</span>version<span class="string">": "</span>github:hexojs/hexo-renderer-markdown-it<span class="comment">#89a5abe048f5a43b42328ad012fb445ded6e665b",</span></span><br><span class="line">  <span class="string">"from"</span>: <span class="string">"github:hexojs/hexo-renderer-markdown-it"</span>,</span><br><span class="line">  <span class="string">"requires"</span>: &#123;</span><br><span class="line">    <span class="string">"lodash.assign"</span>: <span class="string">"^4.2.0"</span>,</span><br><span class="line">    <span class="string">"markdown-it"</span>: <span class="string">"^8.4.1"</span>,</span><br><span class="line">    <span class="string">"markdown-it-abbr"</span>: <span class="string">"^1.0.4"</span>,</span><br><span class="line">    <span class="string">"markdown-it-cjk-breaks"</span>: <span class="string">"^1.1.0"</span>,</span><br><span class="line">    <span class="string">"markdown-it-container"</span>: <span class="string">"^2.0.0"</span>,</span><br><span class="line">    <span class="string">"markdown-it-deflist"</span>: <span class="string">"^2.0.3"</span>,</span><br><span class="line">    <span class="string">"markdown-it-emoji"</span>: <span class="string">"^1.4.0"</span>,</span><br><span class="line">    <span class="string">"markdown-it-footnote"</span>: <span class="string">"^3.0.1"</span>,</span><br><span class="line">    <span class="string">"markdown-it-ins"</span>: <span class="string">"^2.0.0"</span>,</span><br><span class="line">    <span class="string">"markdown-it-mark"</span>: <span class="string">"^2.0.0"</span>,</span><br><span class="line">    <span class="string">"markdown-it-sub"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="string">"markdown-it-sup"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="string">"sluggo"</span>: <span class="string">"^0.2.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过该模块会使得 <code>&lt;!-- more --&gt;</code> 失效，需要写成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;escape&gt;&lt;!-- more --&gt;&lt;/escape&gt;</span><br></pre></td></tr></table></figure><p>才行。</p><p>不过我不喜欢一点进来就到文章半截的模式，所以对我来说没有什么影响，还是乖乖地写 description 吧。</p><p>另外这一部分文档严重不足，只能看自带 <a href="https://github.com/hexojs/hexo-renderer-markdown-it/wiki/Advanced-Configuration" target="_blank" rel="noopener">wiki</a> 和 markdown-it 的例子来写。</p><h4 id="评论">评论</h4><p>关于评论模块，暂时还是采用了 Disqus 的评论系统，好处是不用折腾，因为是以前就配置好的，直接用就可以了，而且功能也足够强大，不过也有几个问题：</p><ul><li>必须登录才能评论。不过我看到有文章说 Disqus 现在支持匿名评论了，有时间再去看一下。</li><li>被 W。这个是最主要的问题，目前看来解决方案有两个，一个是利用其他的服务器转发一下，例如 <a href="https://github.com/fooleap/disqus-php-api" target="_blank" rel="noopener">fooleap/disqus-php-api</a>，另一个是换用其他的评论系统，比如 <a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">gitment</a>/<a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">gitalk</a> 或者 <a href="https://valine.js.org" target="_blank" rel="noopener">Valine</a>，不过这次没有时间在折腾了，留待有时间再解决吧。</li></ul><h4 id="pangu">Pangu</h4><p>这是一个不错的模块，来自与 <a href="https://github.com/vinta/pangu.js" target="_blank" rel="noopener">pangu.js</a>，可以在英文和中文之间自动加入空格，让中英文的混排看起来更舒服一下。</p><h4 id="han">Han</h4><p>汉字排版模块，可以调整中文页面的布局，提供了着重号、拼音上标等功能，来自 <a href="https://github.com/ethantw/Han" target="_blank" rel="noopener">Han</a>。 我比较看中的着重号的功能，因为在英文中，强调使用斜体表示的，就像<em lang="en">emphasize</em>这样，而中文一旦<em lang="en">斜体</em>就会变得非常难看。因此如果用<em>着重号</em>的话会好看很多。</p><p>不过这个插件折腾了我足足半天，原始的 css 文件能够加着重号，但是会把页面变得非常拥挤；<a href="https://github.com/theme-next/theme-next-han" target="_blank" rel="noopener">theme-next-han</a> 里的 css 文件倒是不会改变页面布局，但是着重号的功能却没有了。于是我去翻了源代码，然后发现，为了解决 <a href="https://github.com/iissnan/hexo-theme-next/issues/1645" target="_blank" rel="noopener">#1645</a>，<a href="https://github.com/iissnan/hexo-theme-next/pull/1780" target="_blank" rel="noopener">#1780</a> 把很多有用的内容也删掉了，问题倒是解决了，但剩下的基本上就没有什么作用了。于是我又去翻了 <a href="https://github.com/ethantw/Han" target="_blank" rel="noopener">Han</a> 的源码，发现只要把 <code>well-knit</code> 模块禁掉就可以了，于是又生成了新的 <a href="https://github.com/wangjiezhe/Han/commit/6e8ce2592a4786b8ad7230a2d387177030c66caf" target="_blank" rel="noopener">han.min.css</a> 文件，使之能够正常显示。</p><p>话说我这篇文章写了得有两天的时间，中间有大一部分时间就是去弄这个了。</p><h4 id="canvas-nest">canvas-nest</h4><p>背景动态渲染，来自 <a href="https://github.com/hustcc/canvas-nest.js" target="_blank" rel="noopener">canvas-nest.js</a>。以前看别人的博客遇到这个觉得很好玩，于是这次自己也就加上了。</p><p>不过遗憾的是，Gemini 的博文部分是不显示背景的，好像是把底层背景覆盖了。试了一下四种方案，好像只有 Gemini 是这个样子。。。</p><h3 id="自动部署">自动部署</h3><p>关于 GitHub Pages 的部署，我将源代码存储在 source 分支，然后利用 Travis-CI 自动构建并部署到 master 分支。具体看参见 <a href="https://www.itfanr.cc/2017/08/09/using-travis-ci-automatic-deploy-hexo-blogs/" target="_blank" rel="noopener">使用Travis CI自动部署Hexo博客</a>，基本上 copy 过来就可以了。</p><p>另外，我的主题是 Fork 的 Next 的主题，然后在上面进行修改，在用 git submodule 引入进来，结果好几次自动部署失败都是因为修改完主题之后忘记 push 了。。。</p><p>而 GitLab Pages 的部署则要简单许多，只需要照着官方的例子写一个 <code>.gitlab-ci.yml</code> 文件就可以。</p><h2 id="待改进的部分">待改进的部分</h2><p>还有一些部分模块这次没有时间弄了，留着下次有时间再解决吧。一部分现在能想到的我先列举在这里，省得以后又忘了：</p><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled type="checkbox"> 字数统计</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled type="checkbox"> 阅读次数统计</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled type="checkbox"> 分享按钮</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled type="checkbox"> 站内搜索。试过 LocalSearch，但搜索得到的链接始终不对，还没有找到原因，暂时禁用了。</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled type="checkbox"> 分类页面。未能正确生成分类的页面。</li><li class="task-list-item"><input class="task-list-item-checkbox" checked disabled type="checkbox"> 页脚设置</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled type="checkbox"> 版权设置。增加适合于转载文章的版声明。</li><li class="task-list-item"><input class="task-list-item-checkbox" checked disabled type="checkbox"> 字体调整。</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled type="checkbox"> 代码高亮优化。不喜欢现在的高亮主题，</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled type="checkbox"> 超链接显示颜色</li></ul><blockquote><p>P.S. 话说我为什么这么爱用话说。。。</p></blockquote>]]></content>
    
    <summary type="html">
    
      重新构建了博客的页面，记录了一些遇到的问题和解决办法。
    
    </summary>
    
      <category term="Blog" scheme="https://wangjiezhe.com/categories/Blog/"/>
    
    
      <category term="fedora" scheme="https://wangjiezhe.com/tags/fedora/"/>
    
      <category term="blog" scheme="https://wangjiezhe.com/tags/blog/"/>
    
      <category term="archlinux" scheme="https://wangjiezhe.com/tags/archlinux/"/>
    
      <category term="hexo" scheme="https://wangjiezhe.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Linux 随学随记 (4)</title>
    <link href="https://wangjiezhe.com//posts/2015-08-20-Linux-Notes-4/"/>
    <id>https://wangjiezhe.com//posts/2015-08-20-Linux-Notes-4/</id>
    <published>2015-08-19T16:00:00.000Z</published>
    <updated>2018-10-06T18:30:23.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mplayer-循环播放歌曲">mplayer 循环播放歌曲</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mplayer -loop n ***.mp3</span><br></pre></td></tr></table></figure><p>n 表示重复次数，0 表示无限循环。</p><h2 id="vim-搜索大小写匹配">vim 搜索大小写匹配</h2><p><code>set ignorecase</code>忽略正常字母的大小写</p><p><code>set smartcase</code>只包含小写字母时忽略大小写</p><p><code>\c</code>强制忽略大小写</p><p><code>\C</code>强制匹配大小写</p><h2 id="cd-转移">cd 转移</h2><p>当两个目录路径只有一个区别（比如一个单词不同）时，这个是从旧目录切换到新目录的一种简单方法。</p><pre><code>cd directorya directoryb</code></pre><p>第一个参数是当前目录路径中需要替换的参数，第二个参数是替换字符串。</p><pre><code># 要从v7目录 切换到v8目录，只需键入cd v7 v8/programs/v7/reports/monthly &gt; cd v7 v8/programs/v8/reports/monthly &gt;# 如果历史上的每年每月都有一个对应目录，cd 转移允许从一年跳到另一年/hist/2010/april/reports &gt; cd 2010 2011/hist/2011/april/reports &gt;# 切换月份目录/hist/2011/april/reports &gt; cd april may/hist/2011/may/reports &gt;</code></pre><h2 id="vim-快速缩进">vim 快速缩进</h2><p><code>&gt;&gt;</code>向右缩进</p><p><code>&lt;&lt;</code>向左缩进</p><p><code>:ce</code> (center)文本居中</p><p><code>:le</code> (left)文本靠左</p><p><code>:ri</code> (right)文本靠右</p><h2 id="vim-编辑多个文件">vim 编辑多个文件</h2><p><code>:n</code>编辑下一个文件</p><p><code>:N</code>编辑上一个文件</p><p><code>:e#</code>回到前一个文件</p><p><code>:ls</code>列出所有编辑的文件</p><p><code>:b 2.txt</code> or <code>:b 2</code>直接进入文件 2.txt 或者编号为 2 的文件编辑</p><p><code>:bd 2.txt</code> or <code>:b 2</code>删除列表中的文件项目</p><p><code>:f</code>显示正在编辑的文件名</p><p><code>:f new.txt</code>重命名当前文件为 new.txt</p><h2 id="vim-加密文件">vim 加密文件</h2><p><code>$ vim -x file1</code>创建加密文档 file1</p><p><code>set cm=blowfish2</code> (newest)设置加密方式</p>]]></content>
    
    <summary type="html">
    
      记录日常中遇到的与 Linux 相关的问题，主要是关于 vim 和 sed。
    
    </summary>
    
      <category term="Linux" scheme="https://wangjiezhe.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://wangjiezhe.com/tags/linux/"/>
    
      <category term="shell" scheme="https://wangjiezhe.com/tags/shell/"/>
    
      <category term="vim" scheme="https://wangjiezhe.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>Linux 下 zip 解压的文件名乱码问题</title>
    <link href="https://wangjiezhe.com//posts/2014-08-14-Linux-Zipfile-Bug-in-Chinese/"/>
    <id>https://wangjiezhe.com//posts/2014-08-14-Linux-Zipfile-Bug-in-Chinese/</id>
    <published>2014-08-13T16:00:00.000Z</published>
    <updated>2018-10-06T18:30:23.279Z</updated>
    
    <content type="html"><![CDATA[<p>在 windows 下打包的 zip 文件, 文件名是以 GBK 的方式编码的, 在 Linux 下解压会出现文件名乱码的问题.</p><p>一种方法是通过 wine 安装 7z 或 haozip 来解决.</p><p>另一种方法是利用环境变量 + 7z + convmv 来解决.</p><p>用 7z 在 LC_ALL=C 或 LC_ALL=zh_CN.gbk 的环境下解压 zip 文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LC_ALL=C 7z x -oOUTDIR zipfile.zip</span><br></pre></td></tr></table></figure><p>然后用 convmv 检测文件名的编码转换, 查看是否有乱码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convmv -f cp936 -t utf8-r *</span><br></pre></td></tr></table></figure><p>如果没有乱码, 则可以进行转换:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convmv -f cp936 -t utf8 --notest *</span><br></pre></td></tr></table></figure><p>如果还要转换某个文件的编码, 则可以用 iconv :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iconv -f cp936 -t utf8 -o outfile infile</span><br></pre></td></tr></table></figure><p>网上还经常提到的一种方法是用 unzip 的 -O 选项, 可惜在新版的 unzip 中这一选项被移除了, 如果需要也可以自己打补丁, 不过个人感觉很麻烦.</p><p>还有一种方法是用 python 来做. 网上有一个流传比较广的脚本, 不过功能不过完善, 下面的代码是在原代码基础上修改而成的，支持解压加密的压缩文件（一个是 python3 的版本，一个是 python2 的版本）:</p><script src="https://gist.github.com/wangjiezhe/7841a350983a147b6d7e.js"></script>]]></content>
    
    <summary type="html">
    
      GBK 编码的 zip 文件正常解压（unzip，7z，file-roller）都会出现乱码，本文通过一个 python 脚本来彻底解决这个问题。
    
    </summary>
    
      <category term="Linux" scheme="https://wangjiezhe.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://wangjiezhe.com/tags/linux/"/>
    
      <category term="zip" scheme="https://wangjiezhe.com/tags/zip/"/>
    
      <category term="乱码" scheme="https://wangjiezhe.com/tags/%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Linux 随学随记 (3)</title>
    <link href="https://wangjiezhe.com//posts/2014-04-20-Linux-Notes-3/"/>
    <id>https://wangjiezhe.com//posts/2014-04-20-Linux-Notes-3/</id>
    <published>2014-04-19T16:00:00.000Z</published>
    <updated>2018-10-06T18:30:23.279Z</updated>
    
    <content type="html"><![CDATA[<p><code>^[</code>  使用Ctrl-V Esc生成（ASC ASCII值）</p><h2 id="二-开机自启动文件">二、开机自启动文件</h2><p>系统: <code>/etc/rc.d/rc.local</code>用户: <code>$HOME/.config/autostart/</code></p><h2 id="三-sed-替换中使用变量">三、sed 替换中使用变量</h2><p>sed替换命令用双引号<code>&quot; &quot;</code> 而不是单引号 <code>' '</code>，然后里面直接用 <code>$VARIABLE</code> 就可以了。</p><h2 id="四-vim-保存-root-权限文件">四、vim 保存 root 权限文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:w !sudo tee %</span><br></pre></td></tr></table></figure><h2 id="五-vim-跳转">五、vim 跳转</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+] = Ctrl+left\_click</span><br><span class="line">Ctrl+t = Ctrl+right\_click</span><br></pre></td></tr></table></figure><h2 id="六-从视频中提取音频">六、从视频中提取音频</h2><p>运行以下命令之一：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mencoder -oac mp3lame -ovc copy -of rawaudio 01.flv -o 01.mp3</span><br><span class="line">$ ffmpeg -i 01.flv -f mp3 -vn 01.mp3</span><br><span class="line">$ ffmpeg -i 01.flv -acodec libmp3lame -vn 01.mp3</span><br></pre></td></tr></table></figure><h2 id="七-交换-capslock-键和左-ctrl-键">七、交换 CapsLock 键和左 Ctrl 键</h2><h3 id="1-使用-gnome-tweak-tool">1. 使用 gnome-tweak-tool</h3><p>选择 Typing &gt; Ctrl key position &gt; Swap Ctrl and Caps Lock 即可。</p><p>（要求 <code>gsettings get org.gnome.settings-daemon.plugins.keyboard active</code> 的值为 <code>true</code>，故在 gnome 中使用 fcitx 时此方法无法使用）</p><h3 id="2-使用-setxkbmap-命令">2. 使用 setxkbmap 命令</h3><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setxkbmap -option ctrl:swapctrl</span><br></pre></td></tr></table></figure><p>或者在 ~/.zshrc 中添加如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Swap Ctrl_L and CapsLock</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$DISPLAY</span> ]]; <span class="keyword">then</span></span><br><span class="line">    setxkbmap -option ctrl:swapctrl</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="八-交换-escape-键和右-alt-键">八、交换 Escape 键和右 Alt 键</h2><p>这时，前面两种方法都没有现成的选项可以使用，因此我们使用xmodmap</p><p>建立 ~/.xmodmap，添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">! 交换Escape和Alt_R</span><br><span class="line">clear mod1</span><br><span class="line">keycode   9 = Alt_R NoSymbol Alt_R</span><br><span class="line">keycode 108 = Escape NoSymbol Escape</span><br><span class="line">add    mod1 = Escape Meta_L</span><br></pre></td></tr></table></figure><p>然后运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmodmap ~/.xmodmap 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>网上的教程都是要将命令添加到 ~/.xinitrc 或 /etc/rc.d/rc.local 中，而不是 ~/.zshrc (或 ~/.bashrc)中，否则会重复执行使得键位回归。但经测试，前者无法成功(有的地方解释是 xinitrc 在新版本中已不再使用)，于是我在 ~/.zshrc 中添加如下代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Swap Alt_R and Escape</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$DISPLAY</span> ]] &amp;&amp; [[ -n $(xmodmap|grep <span class="string">"mod1.*Alt_R"</span>) ]]; <span class="keyword">then</span></span><br><span class="line">    xmodmap <span class="string">"<span class="variable">$HOME</span>"</span>/.xmodmap 2&gt;/dev/null</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      记录日常中遇到的与 Linux 相关的问题，主要是关于 vim 和 sed。
    
    </summary>
    
      <category term="Linux" scheme="https://wangjiezhe.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://wangjiezhe.com/tags/linux/"/>
    
      <category term="shell" scheme="https://wangjiezhe.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>修改 NetworkManager wifi 热点的加密方式</title>
    <link href="https://wangjiezhe.com//posts/2014-03-22-NetworkManager-Hotspot-Setting/"/>
    <id>https://wangjiezhe.com//posts/2014-03-22-NetworkManager-Hotspot-Setting/</id>
    <published>2014-03-21T16:00:00.000Z</published>
    <updated>2018-10-06T18:30:23.279Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>Note: 在 Fedora 21 中, 默认的加密方式已改为 WPA</strong></p></blockquote><p>NetworkManager 共享 wifi 热点时默认的加密方式是 WEP, 这种加密方式早已被证明安全性较低.而 WPA 加密的安全性则相对较高.</p><p>wifi 热点的配置文件为 <code>/etc/NetworkManager/system-connections/Hostpot</code>, 该文件须用 root 权限打开.</p><p>修改:</p><p>ssid: wifi 名称, 可改为自己想要的.</p><p>key-mgmt: 加密方式, 有以下几种:</p><ul><li>none: WEP</li><li>ieee8021x: Dynamic WEP</li><li>wpa-none: WPA-PSK Ad-Hoc</li><li>wpa-psk: infrastructure WPA-PSK</li><li>wpa-eap: WPA-Enterprise</li></ul><p>默认为 <code>key-mgmt=none</code>, 我将其修改为 <code>key-mgmt=wpa-psk</code>.</p><p>下面原来两行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wep-key0=</span><br><span class="line">wep-key-type=</span><br></pre></td></tr></table></figure><p>为WEP密码和类型, 将其删去或注释掉, 改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psk=your_password</span><br></pre></td></tr></table></figure><p>然后重启 NetworkManager 服务即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart NetworkManager.service</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      在 NetworkManager 热点中启用 WPA 加密。（注意：本文已过期！！！）
    
    </summary>
    
      <category term="Linux" scheme="https://wangjiezhe.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://wangjiezhe.com/tags/linux/"/>
    
      <category term="network" scheme="https://wangjiezhe.com/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>Linux 随学随记 (2)</title>
    <link href="https://wangjiezhe.com//posts/2014-03-19-Linux-Notes-2/"/>
    <id>https://wangjiezhe.com//posts/2014-03-19-Linux-Notes-2/</id>
    <published>2014-03-18T16:00:00.000Z</published>
    <updated>2018-10-06T18:30:23.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-vim切换tab">一、vim切换tab:</h2><p>向后  <code>:tabn</code>向前  <code>:tabp</code></p><h2 id="二-vim与系统剪贴板的交互-仅限于gvim">二、vim与系统剪贴板的交互 (仅限于gvim!!!)</h2><p><code>&quot;+y</code>复制到剪贴板</p><p><code>&quot;+p</code>从剪贴板粘贴</p><h2 id="三-vim重复命令">三、vim重复命令</h2><p><code>.</code>重复上次操作，前面可加次数</p><p><code>:[range]g[lobal]/{pattern}/[cmd]</code>在 <code>[range]</code> 界定的匹配模式 <code>{pattern}</code> 的文本行上执行Ex 命令 <code>[cmd]</code> （缺省是 <code>:p</code>）。</p><p><code>:[range]g[lobal]!/{pattern}/[cmd]</code>在 [range] 界定的_不_匹配模式 {pattern} 的文本行上执行 Ex 命令 [cmd] （缺省是 <code>:p</code>）。</p><p><code>:[range]v[global]/{pattern}/[cmd]</code>等同于 :g!。</p><h2 id="四-vim中tab与空格的转换-慎用">四、vim中tab与空格的转换 (慎用！！！)</h2><p><code>:ret[ab][!] [new_tabstop]</code>将制表符<code>&lt;TAB&gt;</code>转换为空格符，数量由<code>[new_tabstop]</code>指定。若为空或为0，则使用默认的<code>tabstop</code>。若有<code>!</code>，则将空格序列转化为<code>&lt;TAB&gt;</code>。</p><h2 id="五-查看中文帮助">五、查看中文帮助:</h2><p><strong><code>man -L zh_CN.utf8 command</code></strong></p><h2 id="六-查看日志">六、查看日志:</h2><p><code>journalctl [OPTIONS...] [MATCHES...]</code></p><p>Options:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-f --follow        Follow the journal</span><br><span class="line">   --since=DATE    Start showing entries on or newer than the specified date</span><br><span class="line">   --until=DATE    Stop showing entries on or older than the specified date</span><br><span class="line">-l --full          Do not ellipsize fields</span><br><span class="line">-u --unit=UNIT     Show data only from the specified unit</span><br><span class="line">   --disk-usage    Show total disk usage of all journal files</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      记录日常中遇到的与 Linux 相关的问题，主要是关于 vim 和 sed。
    
    </summary>
    
      <category term="Linux" scheme="https://wangjiezhe.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://wangjiezhe.com/tags/linux/"/>
    
      <category term="vim" scheme="https://wangjiezhe.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式简介</title>
    <link href="https://wangjiezhe.com//posts/2014-03-09-intro-for-regular-expression/"/>
    <id>https://wangjiezhe.com//posts/2014-03-09-intro-for-regular-expression/</id>
    <published>2014-03-08T16:00:00.000Z</published>
    <updated>2018-10-06T18:30:23.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="元字符-grep-sed">元字符 (grep, sed)</h2><h3 id="1-句点元字符">1. 句点元字符 <code>.</code></h3><p>通配元字符，匹配任意字符，除了换行符。</p><h3 id="2-反斜杠元字符">2. 反斜杠元字符 <code>\\</code></h3><p>将其后面的一个字符解释为普通字符而不是元字符。</p><h3 id="3-星号元字符">3. 星号元字符 <code>\*</code></h3><p>其紧挨着的之前的匹配有 0+ 次匹配机会。</p><h3 id="4-位置元字符">4. 位置元字符 <code>^</code>, <code>$</code></h3><p>^ 匹配字符串的最前面。$ 匹配字符串的最后面。</p><h3 id="5-字符组元字符-连字符元字符-补字号">5. 字符组元字符 <code>[ ]</code>, 连字符元字符 <code>-</code>, 补字号 <code>^</code></h3><p><code>[]</code> 匹配方括号内的左右字符。<code>\-</code> 连字符元字符仅在字符组元字符内有意义，表示一段连续字符范围。<code>^</code> 表示排除某些字符。</p><h3 id="6-范围字符串">6. 范围字符串 <code>\\{ \\}</code></h3><p><code>\\{n,m\\}</code> 匹配 n~m 次。<code>\\{n\\}</code> 匹配 n 次。<code>\\{n,\\}</code> 匹配 n+ 次。</p><h3 id="7-特殊字符类">7. 特殊字符类</h3><p><code>[[:alpha:]]</code> 匹配任意字母字符，大写或小写<code>[[:alnum:]]</code> 匹配任意字母数字字符，0-9, a-z, A-Z<code>[[:blank:]]</code> 匹配空格或制表符字符<code>[[:digit:]]</code> 匹配任意数字字符，0-9<code>[[:lower:]]</code> 匹配任意小写字母，a-z<code>[[:print:]]</code> 匹配任意可打印字符<code>[[:punct:]]</code> 匹配任意标点<code>[[:space:]]</code> 匹配任意空白字符: 空格、制表符、NL、FF、VT、CR<code>[[:upper:]]</code> 匹配任意大写字符，A-Z</p><h2 id="扩展元字符-egrep-awk">扩展元字符 (egrep, awk)</h2><h3 id="1-加号元字符">1. 加号元字符 <code>+</code></h3><p>其紧挨着的之前的匹配有 <strong>1+</strong> 次匹配机会。</p><h3 id="2-问号元字符">2. 问号元字符 <code>?</code></h3><p>其紧挨着的之前的匹配有 <strong>0~1</strong> 次匹配机会。</p><h3 id="3-竖线元字符">3. 竖线元字符 <code>|</code></h3><p><code>r1|r2</code> 匹配 r1 或 r2</p><h3 id="4-括号元字符">4. 括号元字符 <code>( )</code></h3><p><code>(r1)</code> 匹配子字符串r1(常与 * + ? | 等连用)。</p><h3 id="5-范围元字符">5. 范围元字符 <code>{ }</code></h3><p>与上面的范围元字符类似。</p><h2 id="固定元字符-grep">固定元字符 (grep)</h2><h3 id="1">1. <code>\\&lt; \\&gt;</code></h3><p>严格匹配一个词(后面必须直接跟一个空格或标点符号)。</p><p>参考:</p><ul><li>Linux Command Line and shell Scripting Bible, Richard Blum</li><li>UNIX awk and sed PROGRAMMER’S INTERACTIVE WORKBOOK, Peter Patsis</li></ul>]]></content>
    
    <summary type="html">
    
      一些常见的正则表达式的备忘录。
    
    </summary>
    
      <category term="Linux" scheme="https://wangjiezhe.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://wangjiezhe.com/tags/linux/"/>
    
      <category term="sed" scheme="https://wangjiezhe.com/tags/sed/"/>
    
      <category term="regular expression" scheme="https://wangjiezhe.com/tags/regular-expression/"/>
    
      <category term="grep" scheme="https://wangjiezhe.com/tags/grep/"/>
    
      <category term="awk" scheme="https://wangjiezhe.com/tags/awk/"/>
    
  </entry>
  
  <entry>
    <title>Piplight 在 Linux 上使用网银</title>
    <link href="https://wangjiezhe.com//posts/2014-03-02-Pipelight-use-eBank-on-Linux/"/>
    <id>https://wangjiezhe.com//posts/2014-03-02-Pipelight-use-eBank-on-Linux/</id>
    <published>2014-03-01T16:00:00.000Z</published>
    <updated>2018-10-06T18:30:23.279Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://twitter.com/felixonmars" target="_blank" rel="noopener">@felixonmars</a> 在博客 <a href="http://blog.felixc.at/2014/02/pipelight-let-linux-native-chromium-chrome-support-activex-seamlessly/" target="_blank" rel="noopener">Pipelight – 让 Linux 原生 Chromium/Chrome 无缝支持 ActiveX 控件 (看! 网银!)</a> 中对如何通过 pipelight 使用工行网银做了很详细的描述, 不过是以 Arch Linux 作为例子来介绍的. 这里以 Fedora 20 为例, 做一个详细的介绍.</p><p>二者 Pipelight 和 ActiveX 控件的配置相同, 在 Pipelight 的安装上略有不同. 另外，Fedora 在安装 wine 时没有安装 winetricks, 需要手动安装. 因此, 相同部分的步骤基本上来自上面的博客.</p><p>基本的原理：利用 Chrome 里已有的 npactivex (ActiveX for Chrome) 扩展, 配合 pipelight 提供的 npactivex NPAPI 插件, 将 ActiveX 控件本身用 wine 执行, 并且无缝地嵌入 Chrome 网页中.</p><p>1. 安装不在仓库里的微软核心字体:</p><pre><code>sudo yum install cabextractsudo rpm -i http://sourceforge.net/projects/mscorefonts2/files/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm</code></pre><p>2. 然后添加仓库, 并安装 Pipelight (对于 Fedora 18 和 Fedora 19 只需要把 Fedora_20 替换成 Fedora_18 或 Fedora_19 即可):</p><pre><code>sudo wget http://download.opensuse.org/repositories/home:/DarkPlayer:/Pipelight/Fedora_20/home:DarkPlayer:Pipelight.repo -O /etc/yum.repos.d/pipelight.reposudo yum install pipelightsudo pipelight-plugin --update</code></pre><p>3. 解锁 pipelight 的 npactivex 插件:</p><pre><code>sudo pipelight-plugin --unlock npactivex</code></pre><p>看到 「Plugin npactivex is now unlocked」 即为解锁成功</p><p>4. 启用 npactivex 插件:</p><pre><code>sudo pipelight-plugin --enable npactivex</code></pre><p>5. 启动 chrome 浏览器, 打开 <a href="chrome://plugins" target="_blank" rel="noopener">chrome://plugins</a>, 应该可以看到以下内容:</p><blockquote><p>ActiveX hosting plugin for NPAPI<br>ActiveX hosting plugin for NPAPI r37<br>Name:ActiveX hosting plugin for NPAPI<br>Description:ActiveX hosting plugin for NPAPI r37<br>Version:<br>Location:/usr/lib/pipelight/libpipelight-npactivex.so<br>Type:NPAPI<br>Disable<br>MIME types:<br>MIME typeDescriptionFile extensions<br>application/x-itst-activexActiveX (*.ocx)<br>.ocx<br>application/activex-managerActiveXManager</p></blockquote><p>如果看到下列错误:</p><blockquote><p>Pipelight Error (npactivex)!<br>Something went wrong, check the terminal output</p></blockquote><p>请从终端打开 chromium/google-chrome, 观察终端出错日志</p><p>6. 安装winetricks:</p><pre><code>wget http://winetricks.googlecode.com/svn/trunk/src/winetrickssudo cp winetricks /path/to/your/bin/sudo chmod +x /path/to/your/bin/winetricks</code></pre><p>7. 安装需要的 ActiveX 控件. 下面以工行控件为例:</p><p>7.1. 下载工行网银控件安装包:</p><pre><code>wget http://www.icbc.com.cn/icbc/html/download/dkq/icbc_netbank_client_controls.exe</code></pre><p>7.2. 安装 mfc42 运行库:</p><pre><code>WINEPREFIX=~/.wine-pipelight winetricks -q mfc42</code></pre><p>7.3. 安装:</p><pre><code>WINEPREFIX=~/.wine-pipelight wine icbc_netbank_client_controls.exe</code></pre><p>故障排除: 运行</p><pre><code>WINEPREFIX=~/.wine-pipelight wine uninstaller --list</code></pre><p>如果输出包含以下内容就说明安装成功了, 否则说明以上某一步出错了</p><blockquote><p>{93156467-FD99-4A30-9CA5-8563F4BB8DB3}|||icbc_netbank_client_controls</p></blockquote><p>8. 安装 np-activex extension:</p><p>扩展可以从 Chrome Web Store 直接安装, 地址:</p><p><a href="https://chrome.google.com/webstore/detail/activex-for-chrome/lgllffgicojgllpmdbemgglaponefajn/related" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/activex-for-chrome/lgllffgicojgllpmdbemgglaponefajn/related</a></p><p>9. 设置 np-activex extension:</p><p>打开 chrome://chrome/extensions, 点击 「ActiveX for Chrome」 旁边的 「选项」 (Options), 浏览到 「ICBC工商银行」 所在的条目, 将&quot;已禁用&quot;改为&quot;已启用&quot;.</p><p>10. 用 Chrome 打开 <a href="https://mybank.icbc.com.cn/icbc/perbank/index.jsp" target="_blank" rel="noopener">https://mybank.icbc.com.cn/icbc/perbank/index.jsp</a> 应该可以正常登陆工行网银了.</p><p>上面的博客还给出了其作者对支付宝的测试成功的 npactivex extension 的规则:</p><blockquote><p>Mode: WildChar<br>Pattern: https://*.alipay.com/*<br>User Agent: MSIE9<br>Other helper scripts: dynamic ieevent</p></blockquote><p>不过, 在 npactivex extension 的设置页面中虽然有农业银行的的选项，但是我还是始终没有成功…</p><p>参考:</p><ul><li><a href="http://blog.felixc.at/2014/02/pipelight-let-linux-native-chromium-chrome-support-activex-seamlessly" target="_blank" rel="noopener">Pipelight – 让 Linux 原生 Chromium/Chrome 无缝支持 ActiveX 控件 (看! 网银!)</a></li><li><a href="http://fds-team.de/cms/pipelight-installation.html" target="_blank" rel="noopener">Pipelight - Installation</a></li></ul>]]></content>
    
    <summary type="html">
    
      记录在 Fedora 上使用网银的过程。
    
    </summary>
    
      <category term="Linux" scheme="https://wangjiezhe.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://wangjiezhe.com/tags/linux/"/>
    
      <category term="fedora" scheme="https://wangjiezhe.com/tags/fedora/"/>
    
      <category term="pipelight" scheme="https://wangjiezhe.com/tags/pipelight/"/>
    
      <category term="wine" scheme="https://wangjiezhe.com/tags/wine/"/>
    
      <category term="ActiveX" scheme="https://wangjiezhe.com/tags/ActiveX/"/>
    
  </entry>
  
  <entry>
    <title>Linux 随学随记 (1)</title>
    <link href="https://wangjiezhe.com//posts/2014-03-01-Linux-Notes-1/"/>
    <id>https://wangjiezhe.com//posts/2014-03-01-Linux-Notes-1/</id>
    <published>2014-02-28T16:00:00.000Z</published>
    <updated>2018-10-06T18:30:23.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-vim替换">一、vim替换</h2><p>ctrl+v 进入列模式,向下或向上移动光标,把需要注释的行的开头标记起来,然后按大写的I,再插入注释符,比如#,再按Esc,就会全部注释。或者也可以运行下面这些命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:s/^/#            #用&quot;#&quot;注释当前行</span><br><span class="line">:2,50s/^/#        #在2~50行首添加&quot;#&quot;注释</span><br><span class="line">:.,+3s/^/#        #用&quot;#&quot;注释当前行和当前行后面的三行</span><br><span class="line">:%s/^/#           #用&quot;#&quot;注释所有行</span><br></pre></td></tr></table></figure><p>顺便说一下vim的替换，这个常用，已经牢记，其实和上面用命令注释多行是一样的，只不过是上面注释的命令里的&quot;^&quot;符号代表开始位置而已，在下面这些命令中，「s&quot;代表替换，part1代表查找的内容，part2代表替换的内容，」%&quot;代表所有行，「g&quot;代表替换整行里所有的内容（如果不加」/g&quot;则只替换每行第一个匹配part1的地方）。</p><p>p.n.关于g的用法貌似在本系统相反，虽然各处都这么说。。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">:s/part1/part2              #用part2替换当前行中第1个part1</span><br><span class="line">:s/part1/part2/g            #用part2替换当前行中所有的part1</span><br><span class="line">:%s/part1/part2             #用part2替换所有行中每行第1个part1</span><br><span class="line">:%s/part1/part2/g           #用part2替换所有行中所有的part1</span><br><span class="line">:2,50s/part1/part2          #用part2替换第2行到第50行中每行第1个part1</span><br><span class="line">:2,50s/part1/part2/g        #用part2替换第2行到第50行中所有的part1</span><br><span class="line">:.,+3s/part1/part2          #用part2替换当前行以及当前行后面的三行中每行第1个part1</span><br><span class="line">:.,+3s/part1/part2/g        #用part2替换当前行以及当前行后面的三行中所有的part1</span><br></pre></td></tr></table></figure><p>BTW:在替换时要注意，某些字符是需要转译的，如空格、括号等。</p><h2 id="二-sed添加空行">二、sed添加空行</h2><h3 id="一-每行前后添加空行">（一）每行前后添加空行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed G tmp                          #每行后面添加一行空行</span><br><span class="line">sed &apos;&#123;x;p;x;&#125;&apos; tmp                  #每行前面添加一行空行</span><br><span class="line">sed &apos;G;G&apos; tmp                       #每行后面添加两行空行</span><br><span class="line">sed &apos;&#123;x;p;x;x;p;x;&#125;&apos; tmp             #每行前面添加两行空行</span><br><span class="line">sed &apos;G;G;G&apos; tmp                     #每行后面添加三行空行</span><br><span class="line">sed &apos;&#123;x;p;x;x;p;x;x;p;x&#125;&apos; tmp        #每行前面添加三行空行</span><br></pre></td></tr></table></figure><p>依次类推，添加几行空行，就有几个G或者x;p;x</p><h3 id="二-如果行后有空行-则删除-然后每行后面添加空行">（二）如果行后有空行，则删除，然后每行后面添加空行</h3><p><code>sed '/^$/d;G' tmp</code></p><h3 id="三-在匹配行前后添加空行">（三）在匹配行前后添加空行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;/shui/G&apos; tmp               #如果一行里面有如果一行里面有shui这个单词，那么在他后面会添加一个空行</span><br><span class="line">sed &apos;/shui/&#123;x;p;x;G&#125;&apos; tmp        #如果一行里面有shui这个单词，那么在他前后各添加一个空行</span><br><span class="line">sed &apos;/shui/&#123;x;p;x;&#125;&apos; tmp         #如果一行里面有shui这个单词，那么在他前面添加一个空行</span><br><span class="line">sed &apos;1&#123;x;p;x;&#125;&apos; tmp              #在第一行前面添加空行，想在第几行，命令中的1就改成几</span><br><span class="line">sed &apos;1G&apos; tmp                    #在第一行后面添加空行，想在第几行，命令中的1就改成几</span><br></pre></td></tr></table></figure><h3 id="四-每几行后面添加一个空行">（四）每几行后面添加一个空行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;N;/^$/d;G&apos; tmp                #每两行后面增加一个空行</span><br><span class="line">sed &apos;N;/^$/d;&#123;x;p;x;&#125;&apos; tmp          #每两行前面添加一个空行</span><br><span class="line">sed &apos;N;N;/^$/d;G&apos; tmp              #每三行后面增加一个空行</span><br><span class="line">sed &apos;N;N;/^$/d;&#123;x;p;x;&#125;&apos; tmp        #每三行前面增加一个空行</span><br></pre></td></tr></table></figure><h3 id="五-以x为开头或以x为结尾的行前后添加空行">（五）以x为开头或以x为结尾的行前后添加空行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;/^xi/G;&apos; tmp             #以xi为开头的行后面添加空行</span><br><span class="line">sed &apos;/^xi/&#123;x;p;x;&#125;&apos; tmp        #以xi为结尾的行前面添加空行</span><br><span class="line">sed &apos;/xi$/G;&apos; tmp             #以xi为结尾的行后面添加空行</span><br><span class="line">sed &apos;/xi$/&#123;x;p;x;&#125;&apos; tmp        #以xi为结尾的行后面添加空行</span><br></pre></td></tr></table></figure><h2 id="三-sed删除行首空格">三、sed删除行首空格</h2><p>如果确认只是空格：</p><p><code>sed 's/^ *//' infile</code></p><p>如果判断不清行首是空格还是制表符的话， 还可以用这个：</p><p><code>sed 's/^[[:space:]]*//' infile</code></p>]]></content>
    
    <summary type="html">
    
      记录日常中遇到的与 Linux 相关的问题，主要是关于 vim 和 sed。
    
    </summary>
    
      <category term="Linux" scheme="https://wangjiezhe.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://wangjiezhe.com/tags/linux/"/>
    
      <category term="shell" scheme="https://wangjiezhe.com/tags/shell/"/>
    
      <category term="sed" scheme="https://wangjiezhe.com/tags/sed/"/>
    
      <category term="vim" scheme="https://wangjiezhe.com/tags/vim/"/>
    
  </entry>
  
</feed>
